// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        (unknown)
// source: storage/v1/defs.proto

package storagev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// StorageDriver represents the type of storage driver.
type StorageDriver int32

const (
	StorageDriver_FS      StorageDriver = 0 // Filesystem storage.
	StorageDriver_GCS     StorageDriver = 1 // Google Cloud Storage.
	StorageDriver_S3      StorageDriver = 2 // Amazon S3.
	StorageDriver_UNKNOWN StorageDriver = 4 // Unknown storage
)

// Enum value maps for StorageDriver.
var (
	StorageDriver_name = map[int32]string{
		0: "FS",
		1: "GCS",
		2: "S3",
		4: "UNKNOWN",
	}
	StorageDriver_value = map[string]int32{
		"FS":      0,
		"GCS":     1,
		"S3":      2,
		"UNKNOWN": 4,
	}
)

func (x StorageDriver) Enum() *StorageDriver {
	p := new(StorageDriver)
	*p = x
	return p
}

func (x StorageDriver) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StorageDriver) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_v1_defs_proto_enumTypes[0].Descriptor()
}

func (StorageDriver) Type() protoreflect.EnumType {
	return &file_storage_v1_defs_proto_enumTypes[0]
}

func (x StorageDriver) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StorageDriver.Descriptor instead.
func (StorageDriver) EnumDescriptor() ([]byte, []int) {
	return file_storage_v1_defs_proto_rawDescGZIP(), []int{0}
}

// FileSystemConfig configures the filesystem storage driver.
type FileSystemConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DataPath      string                 `protobuf:"bytes,1,opt,name=data_path,json=dataPath,proto3" json:"data_path,omitempty"` // Path to the data directory.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileSystemConfig) Reset() {
	*x = FileSystemConfig{}
	mi := &file_storage_v1_defs_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileSystemConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileSystemConfig) ProtoMessage() {}

func (x *FileSystemConfig) ProtoReflect() protoreflect.Message {
	mi := &file_storage_v1_defs_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileSystemConfig.ProtoReflect.Descriptor instead.
func (*FileSystemConfig) Descriptor() ([]byte, []int) {
	return file_storage_v1_defs_proto_rawDescGZIP(), []int{0}
}

func (x *FileSystemConfig) GetDataPath() string {
	if x != nil {
		return x.DataPath
	}
	return ""
}

// GCSConfig configures the Google Cloud Storage driver.
type GCSConfig struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	CredentialsFile string                 `protobuf:"bytes,1,opt,name=credentials_file,json=credentialsFile,proto3" json:"credentials_file,omitempty"` // Path to the credentials file.
	Bucket          string                 `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty"`                                          // GCS bucket name.
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GCSConfig) Reset() {
	*x = GCSConfig{}
	mi := &file_storage_v1_defs_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GCSConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GCSConfig) ProtoMessage() {}

func (x *GCSConfig) ProtoReflect() protoreflect.Message {
	mi := &file_storage_v1_defs_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GCSConfig.ProtoReflect.Descriptor instead.
func (*GCSConfig) Descriptor() ([]byte, []int) {
	return file_storage_v1_defs_proto_rawDescGZIP(), []int{1}
}

func (x *GCSConfig) GetCredentialsFile() string {
	if x != nil {
		return x.CredentialsFile
	}
	return ""
}

func (x *GCSConfig) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

// S3Config configures the Amazon S3 driver.
type S3Config struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Endpoint        string                 `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`                                        // S3 endpoint.
	AccessKeyId     string                 `protobuf:"bytes,2,opt,name=access_key_id,json=accessKeyId,proto3" json:"access_key_id,omitempty"`             // S3 access key ID.
	SecretAccessKey string                 `protobuf:"bytes,3,opt,name=secret_access_key,json=secretAccessKey,proto3" json:"secret_access_key,omitempty"` // S3 secret access key.
	Region          string                 `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`                                            // S3 region.
	Bucket          string                 `protobuf:"bytes,5,opt,name=bucket,proto3" json:"bucket,omitempty"`                                            // S3 bucket name.
	EnableSsl       bool                   `protobuf:"varint,6,opt,name=enable_ssl,json=enableSsl,proto3" json:"enable_ssl,omitempty"`                    // Whether to enable SSL.
	UsePathStyle    bool                   `protobuf:"varint,7,opt,name=use_path_style,json=usePathStyle,proto3" json:"use_path_style,omitempty"`         // Whether to use path-style addressing.
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *S3Config) Reset() {
	*x = S3Config{}
	mi := &file_storage_v1_defs_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *S3Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S3Config) ProtoMessage() {}

func (x *S3Config) ProtoReflect() protoreflect.Message {
	mi := &file_storage_v1_defs_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S3Config.ProtoReflect.Descriptor instead.
func (*S3Config) Descriptor() ([]byte, []int) {
	return file_storage_v1_defs_proto_rawDescGZIP(), []int{2}
}

func (x *S3Config) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *S3Config) GetAccessKeyId() string {
	if x != nil {
		return x.AccessKeyId
	}
	return ""
}

func (x *S3Config) GetSecretAccessKey() string {
	if x != nil {
		return x.SecretAccessKey
	}
	return ""
}

func (x *S3Config) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *S3Config) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *S3Config) GetEnableSsl() bool {
	if x != nil {
		return x.EnableSsl
	}
	return false
}

func (x *S3Config) GetUsePathStyle() bool {
	if x != nil {
		return x.UsePathStyle
	}
	return false
}

// StorageConfig configures the overall storage settings.
type StorageConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Driver        StorageDriver          `protobuf:"varint,1,opt,name=driver,proto3,enum=storage.v1.StorageDriver" json:"driver,omitempty"` // The storage driver to use.
	Fs            *FileSystemConfig      `protobuf:"bytes,2,opt,name=fs,proto3" json:"fs,omitempty"`                                        // Filesystem configuration.
	S3            *S3Config              `protobuf:"bytes,3,opt,name=s3,proto3" json:"s3,omitempty"`                                        // S3 configuration.
	Gcs           *GCSConfig             `protobuf:"bytes,4,opt,name=gcs,proto3" json:"gcs,omitempty"`                                      // GCS configuration.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorageConfig) Reset() {
	*x = StorageConfig{}
	mi := &file_storage_v1_defs_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageConfig) ProtoMessage() {}

func (x *StorageConfig) ProtoReflect() protoreflect.Message {
	mi := &file_storage_v1_defs_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageConfig.ProtoReflect.Descriptor instead.
func (*StorageConfig) Descriptor() ([]byte, []int) {
	return file_storage_v1_defs_proto_rawDescGZIP(), []int{3}
}

func (x *StorageConfig) GetDriver() StorageDriver {
	if x != nil {
		return x.Driver
	}
	return StorageDriver_FS
}

func (x *StorageConfig) GetFs() *FileSystemConfig {
	if x != nil {
		return x.Fs
	}
	return nil
}

func (x *StorageConfig) GetS3() *S3Config {
	if x != nil {
		return x.S3
	}
	return nil
}

func (x *StorageConfig) GetGcs() *GCSConfig {
	if x != nil {
		return x.Gcs
	}
	return nil
}

// FTPConfig configures the FTP storage settings.
type FTPConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`   // FTP server address.
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"` // FTP username.
	Password      string                 `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"` // FTP password.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FTPConfig) Reset() {
	*x = FTPConfig{}
	mi := &file_storage_v1_defs_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FTPConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FTPConfig) ProtoMessage() {}

func (x *FTPConfig) ProtoReflect() protoreflect.Message {
	mi := &file_storage_v1_defs_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FTPConfig.ProtoReflect.Descriptor instead.
func (*FTPConfig) Descriptor() ([]byte, []int) {
	return file_storage_v1_defs_proto_rawDescGZIP(), []int{4}
}

func (x *FTPConfig) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *FTPConfig) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *FTPConfig) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// Stat contains metadata about content stored in storage.
type Stat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ModifiedTime  *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=modified_time,json=modifiedTime,proto3" json:"modified_time,omitempty"` // Last modified time.
	Size          int64                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`                                    // Size in bytes.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Stat) Reset() {
	*x = Stat{}
	mi := &file_storage_v1_defs_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Stat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stat) ProtoMessage() {}

func (x *Stat) ProtoReflect() protoreflect.Message {
	mi := &file_storage_v1_defs_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stat.ProtoReflect.Descriptor instead.
func (*Stat) Descriptor() ([]byte, []int) {
	return file_storage_v1_defs_proto_rawDescGZIP(), []int{5}
}

func (x *Stat) GetModifiedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ModifiedTime
	}
	return nil
}

func (x *Stat) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

var File_storage_v1_defs_proto protoreflect.FileDescriptor

var file_storage_v1_defs_proto_rawDesc = string([]byte{
	0x0a, 0x15, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x66,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2f, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x50, 0x61, 0x74, 0x68, 0x22, 0x4e, 0x0a, 0x09, 0x47, 0x43, 0x53, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x73, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x22, 0xeb, 0x01, 0x0a, 0x08, 0x53, 0x33, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x22,
	0x0a, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79,
	0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x73, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x73, 0x6c, 0x12, 0x24, 0x0a,
	0x0e, 0x75, 0x73, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x50, 0x61, 0x74, 0x68, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x22, 0xbf, 0x01, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x31, 0x0a, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x52, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x02, 0x66, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x02, 0x66, 0x73, 0x12, 0x24, 0x0a, 0x02, 0x73, 0x33, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x33, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x02, 0x73, 0x33, 0x12, 0x27, 0x0a, 0x03,
	0x67, 0x63, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x43, 0x53, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x03, 0x67, 0x63, 0x73, 0x22, 0x5d, 0x0a, 0x09, 0x46, 0x54, 0x50, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x22, 0x5b, 0x0a, 0x04, 0x53, 0x74, 0x61, 0x74, 0x12, 0x3f, 0x0a, 0x0d,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0c, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x2a, 0x35, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x44, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x12, 0x06, 0x0a, 0x02, 0x46, 0x53, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x43,
	0x53, 0x10, 0x01, 0x12, 0x06, 0x0a, 0x02, 0x53, 0x33, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x04, 0x42, 0xa5, 0x01, 0x0a, 0x0e, 0x63, 0x6f, 0x6d,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x09, 0x44, 0x65, 0x66,
	0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x70, 0x72, 0x6f, 0x64, 0x63, 0x61,
	0x73, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x76, 0x31, 0x3b,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x53, 0x58, 0x58, 0xaa,
	0x02, 0x0a, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0a, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x16, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x0b, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x3a, 0x3a, 0x56, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_storage_v1_defs_proto_rawDescOnce sync.Once
	file_storage_v1_defs_proto_rawDescData []byte
)

func file_storage_v1_defs_proto_rawDescGZIP() []byte {
	file_storage_v1_defs_proto_rawDescOnce.Do(func() {
		file_storage_v1_defs_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_storage_v1_defs_proto_rawDesc), len(file_storage_v1_defs_proto_rawDesc)))
	})
	return file_storage_v1_defs_proto_rawDescData
}

var file_storage_v1_defs_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_storage_v1_defs_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_storage_v1_defs_proto_goTypes = []any{
	(StorageDriver)(0),            // 0: storage.v1.StorageDriver
	(*FileSystemConfig)(nil),      // 1: storage.v1.FileSystemConfig
	(*GCSConfig)(nil),             // 2: storage.v1.GCSConfig
	(*S3Config)(nil),              // 3: storage.v1.S3Config
	(*StorageConfig)(nil),         // 4: storage.v1.StorageConfig
	(*FTPConfig)(nil),             // 5: storage.v1.FTPConfig
	(*Stat)(nil),                  // 6: storage.v1.Stat
	(*timestamppb.Timestamp)(nil), // 7: google.protobuf.Timestamp
}
var file_storage_v1_defs_proto_depIdxs = []int32{
	0, // 0: storage.v1.StorageConfig.driver:type_name -> storage.v1.StorageDriver
	1, // 1: storage.v1.StorageConfig.fs:type_name -> storage.v1.FileSystemConfig
	3, // 2: storage.v1.StorageConfig.s3:type_name -> storage.v1.S3Config
	2, // 3: storage.v1.StorageConfig.gcs:type_name -> storage.v1.GCSConfig
	7, // 4: storage.v1.Stat.modified_time:type_name -> google.protobuf.Timestamp
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_storage_v1_defs_proto_init() }
func file_storage_v1_defs_proto_init() {
	if File_storage_v1_defs_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_storage_v1_defs_proto_rawDesc), len(file_storage_v1_defs_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_storage_v1_defs_proto_goTypes,
		DependencyIndexes: file_storage_v1_defs_proto_depIdxs,
		EnumInfos:         file_storage_v1_defs_proto_enumTypes,
		MessageInfos:      file_storage_v1_defs_proto_msgTypes,
	}.Build()
	File_storage_v1_defs_proto = out.File
	file_storage_v1_defs_proto_goTypes = nil
	file_storage_v1_defs_proto_depIdxs = nil
}

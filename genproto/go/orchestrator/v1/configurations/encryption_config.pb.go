// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: orchestrator/v1/configurations/encryption_config.proto

package configurationsv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents a protection scheme.
type ProtectionScheme int32

const (
	ProtectionScheme_CENC ProtectionScheme = 0 // CENC (Common Encryption)
	ProtectionScheme_CBCS ProtectionScheme = 1 // CBCS (Cipher Block Chaining with Salt)
)

// Enum value maps for ProtectionScheme.
var (
	ProtectionScheme_name = map[int32]string{
		0: "CENC",
		1: "CBCS",
	}
	ProtectionScheme_value = map[string]int32{
		"CENC": 0,
		"CBCS": 1,
	}
)

func (x ProtectionScheme) Enum() *ProtectionScheme {
	p := new(ProtectionScheme)
	*p = x
	return p
}

func (x ProtectionScheme) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProtectionScheme) Descriptor() protoreflect.EnumDescriptor {
	return file_orchestrator_v1_configurations_encryption_config_proto_enumTypes[0].Descriptor()
}

func (ProtectionScheme) Type() protoreflect.EnumType {
	return &file_orchestrator_v1_configurations_encryption_config_proto_enumTypes[0]
}

func (x ProtectionScheme) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProtectionScheme.Descriptor instead.
func (ProtectionScheme) EnumDescriptor() ([]byte, []int) {
	return file_orchestrator_v1_configurations_encryption_config_proto_rawDescGZIP(), []int{0}
}

// Represents a protection system.
type ProtectionSystem int32

const (
	ProtectionSystem_WIDEVINE  ProtectionSystem = 0 // Widevine DRM
	ProtectionSystem_FAIRPLAY  ProtectionSystem = 1 // FairPlay DRM
	ProtectionSystem_PLAYREADY ProtectionSystem = 2 // PlayReady DRM
	ProtectionSystem_MARLIN    ProtectionSystem = 3 // Marlin DRM
	ProtectionSystem_COMMON    ProtectionSystem = 4 // Common System
)

// Enum value maps for ProtectionSystem.
var (
	ProtectionSystem_name = map[int32]string{
		0: "WIDEVINE",
		1: "FAIRPLAY",
		2: "PLAYREADY",
		3: "MARLIN",
		4: "COMMON",
	}
	ProtectionSystem_value = map[string]int32{
		"WIDEVINE":  0,
		"FAIRPLAY":  1,
		"PLAYREADY": 2,
		"MARLIN":    3,
		"COMMON":    4,
	}
)

func (x ProtectionSystem) Enum() *ProtectionSystem {
	p := new(ProtectionSystem)
	*p = x
	return p
}

func (x ProtectionSystem) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProtectionSystem) Descriptor() protoreflect.EnumDescriptor {
	return file_orchestrator_v1_configurations_encryption_config_proto_enumTypes[1].Descriptor()
}

func (ProtectionSystem) Type() protoreflect.EnumType {
	return &file_orchestrator_v1_configurations_encryption_config_proto_enumTypes[1]
}

func (x ProtectionSystem) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProtectionSystem.Descriptor instead.
func (ProtectionSystem) EnumDescriptor() ([]byte, []int) {
	return file_orchestrator_v1_configurations_encryption_config_proto_rawDescGZIP(), []int{1}
}

// Represents the encryption mode.
type EncryptionConfig_EncryptionMode int32

const (
	EncryptionConfig_WIDEVINE EncryptionConfig_EncryptionMode = 0 // Widevine key server mode
	EncryptionConfig_RAW      EncryptionConfig_EncryptionMode = 1 // Raw key mode
)

// Enum value maps for EncryptionConfig_EncryptionMode.
var (
	EncryptionConfig_EncryptionMode_name = map[int32]string{
		0: "WIDEVINE",
		1: "RAW",
	}
	EncryptionConfig_EncryptionMode_value = map[string]int32{
		"WIDEVINE": 0,
		"RAW":      1,
	}
)

func (x EncryptionConfig_EncryptionMode) Enum() *EncryptionConfig_EncryptionMode {
	p := new(EncryptionConfig_EncryptionMode)
	*p = x
	return p
}

func (x EncryptionConfig_EncryptionMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EncryptionConfig_EncryptionMode) Descriptor() protoreflect.EnumDescriptor {
	return file_orchestrator_v1_configurations_encryption_config_proto_enumTypes[2].Descriptor()
}

func (EncryptionConfig_EncryptionMode) Type() protoreflect.EnumType {
	return &file_orchestrator_v1_configurations_encryption_config_proto_enumTypes[2]
}

func (x EncryptionConfig_EncryptionMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EncryptionConfig_EncryptionMode.Descriptor instead.
func (EncryptionConfig_EncryptionMode) EnumDescriptor() ([]byte, []int) {
	return file_orchestrator_v1_configurations_encryption_config_proto_rawDescGZIP(), []int{1, 0}
}

// Represents a raw key configuration.
type RawKeyConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`              // Label for the key.
	KeyId string `protobuf:"bytes,2,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"` // Key identifier (32-digit hex string).
	Key   string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`                  // Encryption key (32-digit hex string).
}

func (x *RawKeyConfig) Reset() {
	*x = RawKeyConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orchestrator_v1_configurations_encryption_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawKeyConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawKeyConfig) ProtoMessage() {}

func (x *RawKeyConfig) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_v1_configurations_encryption_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawKeyConfig.ProtoReflect.Descriptor instead.
func (*RawKeyConfig) Descriptor() ([]byte, []int) {
	return file_orchestrator_v1_configurations_encryption_config_proto_rawDescGZIP(), []int{0}
}

func (x *RawKeyConfig) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *RawKeyConfig) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *RawKeyConfig) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

// Represents the encryption configuration.
type EncryptionConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enable            bool                            `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`                                                                                               // Whether encryption is enabled.
	EncryptionMode    EncryptionConfig_EncryptionMode `protobuf:"varint,2,opt,name=encryption_mode,json=encryptionMode,proto3,enum=configurations.v1.EncryptionConfig_EncryptionMode" json:"encryption_mode,omitempty"`  // Encryption mode.
	ProtectionSystems []ProtectionSystem              `protobuf:"varint,3,rep,packed,name=protection_systems,json=protectionSystems,proto3,enum=configurations.v1.ProtectionSystem" json:"protection_systems,omitempty"` // List of protection systems.
	Pssh              string                          `protobuf:"bytes,4,opt,name=pssh,proto3" json:"pssh,omitempty"`                                                                                                    // PSSH box in hex string format (for raw mode).
	Iv                string                          `protobuf:"bytes,5,opt,name=iv,proto3" json:"iv,omitempty"`                                                                                                        // IV in hex string format (for raw mode).
	Keys              []*RawKeyConfig                 `protobuf:"bytes,6,rep,name=keys,proto3" json:"keys,omitempty"`                                                                                                    // List of encryption keys (for raw mode).
	ContentId         string                          `protobuf:"bytes,7,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"`                                                                         // Content ID in hex (for widevine mode).
	KeyServerUrl      string                          `protobuf:"bytes,8,opt,name=key_server_url,json=keyServerUrl,proto3" json:"key_server_url,omitempty"`                                                              // Key server URL (for widevine mode).
	Signer            string                          `protobuf:"bytes,9,opt,name=signer,proto3" json:"signer,omitempty"`                                                                                                // Signer for key server authentication (for widevine mode).
	SigningKey        string                          `protobuf:"bytes,10,opt,name=signing_key,json=signingKey,proto3" json:"signing_key,omitempty"`                                                                     // Signing key in hex (for widevine mode).
	SigningIv         string                          `protobuf:"bytes,11,opt,name=signing_iv,json=signingIv,proto3" json:"signing_iv,omitempty"`                                                                        // Signing IV in hex (for widevine mode).
	ProtectionScheme  ProtectionScheme                `protobuf:"varint,12,opt,name=protection_scheme,json=protectionScheme,proto3,enum=configurations.v1.ProtectionScheme" json:"protection_scheme,omitempty"`          // Protection scheme.
	ClearLead         int32                           `protobuf:"varint,13,opt,name=clear_lead,json=clearLead,proto3" json:"clear_lead,omitempty"`                                                                       // Seconds of unencrypted media at the beginning.
}

func (x *EncryptionConfig) Reset() {
	*x = EncryptionConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orchestrator_v1_configurations_encryption_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptionConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptionConfig) ProtoMessage() {}

func (x *EncryptionConfig) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_v1_configurations_encryption_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptionConfig.ProtoReflect.Descriptor instead.
func (*EncryptionConfig) Descriptor() ([]byte, []int) {
	return file_orchestrator_v1_configurations_encryption_config_proto_rawDescGZIP(), []int{1}
}

func (x *EncryptionConfig) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *EncryptionConfig) GetEncryptionMode() EncryptionConfig_EncryptionMode {
	if x != nil {
		return x.EncryptionMode
	}
	return EncryptionConfig_WIDEVINE
}

func (x *EncryptionConfig) GetProtectionSystems() []ProtectionSystem {
	if x != nil {
		return x.ProtectionSystems
	}
	return nil
}

func (x *EncryptionConfig) GetPssh() string {
	if x != nil {
		return x.Pssh
	}
	return ""
}

func (x *EncryptionConfig) GetIv() string {
	if x != nil {
		return x.Iv
	}
	return ""
}

func (x *EncryptionConfig) GetKeys() []*RawKeyConfig {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *EncryptionConfig) GetContentId() string {
	if x != nil {
		return x.ContentId
	}
	return ""
}

func (x *EncryptionConfig) GetKeyServerUrl() string {
	if x != nil {
		return x.KeyServerUrl
	}
	return ""
}

func (x *EncryptionConfig) GetSigner() string {
	if x != nil {
		return x.Signer
	}
	return ""
}

func (x *EncryptionConfig) GetSigningKey() string {
	if x != nil {
		return x.SigningKey
	}
	return ""
}

func (x *EncryptionConfig) GetSigningIv() string {
	if x != nil {
		return x.SigningIv
	}
	return ""
}

func (x *EncryptionConfig) GetProtectionScheme() ProtectionScheme {
	if x != nil {
		return x.ProtectionScheme
	}
	return ProtectionScheme_CENC
}

func (x *EncryptionConfig) GetClearLead() int32 {
	if x != nil {
		return x.ClearLead
	}
	return 0
}

var File_orchestrator_v1_configurations_encryption_config_proto protoreflect.FileDescriptor

var file_orchestrator_v1_configurations_encryption_config_proto_rawDesc = []byte{
	0x0a, 0x36, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x22, 0x4d, 0x0a, 0x0c, 0x52,
	0x61, 0x77, 0x4b, 0x65, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0xeb, 0x04, 0x0a, 0x10, 0x45,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x5b, 0x0a, 0x0f, 0x65, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x32, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0e, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x52, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x73, 0x73, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x73, 0x73, 0x68, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x76, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x76, 0x12, 0x33, 0x0a, 0x04,
	0x6b, 0x65, 0x79, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x61, 0x77, 0x4b, 0x65, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x6b, 0x65, 0x79,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x24, 0x0a, 0x0e, 0x6b, 0x65, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6b, 0x65, 0x79, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x76, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x76, 0x12, 0x50,
	0x0a, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x10,
	0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x5f, 0x6c, 0x65, 0x61, 0x64, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x4c, 0x65, 0x61, 0x64, 0x22,
	0x27, 0x0a, 0x0e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64,
	0x65, 0x12, 0x0c, 0x0a, 0x08, 0x57, 0x49, 0x44, 0x45, 0x56, 0x49, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x07, 0x0a, 0x03, 0x52, 0x41, 0x57, 0x10, 0x01, 0x2a, 0x26, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x74,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x08, 0x0a, 0x04,
	0x43, 0x45, 0x4e, 0x43, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x43, 0x42, 0x43, 0x53, 0x10, 0x01,
	0x2a, 0x55, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x12, 0x0c, 0x0a, 0x08, 0x57, 0x49, 0x44, 0x45, 0x56, 0x49, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x41, 0x49, 0x52, 0x50, 0x4c, 0x41, 0x59, 0x10, 0x01,
	0x12, 0x0d, 0x0a, 0x09, 0x50, 0x4c, 0x41, 0x59, 0x52, 0x45, 0x41, 0x44, 0x59, 0x10, 0x02, 0x12,
	0x0a, 0x0a, 0x06, 0x4d, 0x41, 0x52, 0x4c, 0x49, 0x4e, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x43,
	0x4f, 0x4d, 0x4d, 0x4f, 0x4e, 0x10, 0x04, 0x42, 0xef, 0x01, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x31, 0x42, 0x15, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x5a, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x70, 0x72, 0x6f, 0x64,
	0x63, 0x61, 0x73, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x43, 0x58, 0x58, 0xaa, 0x02, 0x11, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x56, 0x31,
	0xca, 0x02, 0x11, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x12, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_orchestrator_v1_configurations_encryption_config_proto_rawDescOnce sync.Once
	file_orchestrator_v1_configurations_encryption_config_proto_rawDescData = file_orchestrator_v1_configurations_encryption_config_proto_rawDesc
)

func file_orchestrator_v1_configurations_encryption_config_proto_rawDescGZIP() []byte {
	file_orchestrator_v1_configurations_encryption_config_proto_rawDescOnce.Do(func() {
		file_orchestrator_v1_configurations_encryption_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_orchestrator_v1_configurations_encryption_config_proto_rawDescData)
	})
	return file_orchestrator_v1_configurations_encryption_config_proto_rawDescData
}

var file_orchestrator_v1_configurations_encryption_config_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_orchestrator_v1_configurations_encryption_config_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_orchestrator_v1_configurations_encryption_config_proto_goTypes = []interface{}{
	(ProtectionScheme)(0),                // 0: configurations.v1.ProtectionScheme
	(ProtectionSystem)(0),                // 1: configurations.v1.ProtectionSystem
	(EncryptionConfig_EncryptionMode)(0), // 2: configurations.v1.EncryptionConfig.EncryptionMode
	(*RawKeyConfig)(nil),                 // 3: configurations.v1.RawKeyConfig
	(*EncryptionConfig)(nil),             // 4: configurations.v1.EncryptionConfig
}
var file_orchestrator_v1_configurations_encryption_config_proto_depIdxs = []int32{
	2, // 0: configurations.v1.EncryptionConfig.encryption_mode:type_name -> configurations.v1.EncryptionConfig.EncryptionMode
	1, // 1: configurations.v1.EncryptionConfig.protection_systems:type_name -> configurations.v1.ProtectionSystem
	3, // 2: configurations.v1.EncryptionConfig.keys:type_name -> configurations.v1.RawKeyConfig
	0, // 3: configurations.v1.EncryptionConfig.protection_scheme:type_name -> configurations.v1.ProtectionScheme
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_orchestrator_v1_configurations_encryption_config_proto_init() }
func file_orchestrator_v1_configurations_encryption_config_proto_init() {
	if File_orchestrator_v1_configurations_encryption_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_orchestrator_v1_configurations_encryption_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawKeyConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orchestrator_v1_configurations_encryption_config_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncryptionConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_orchestrator_v1_configurations_encryption_config_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_orchestrator_v1_configurations_encryption_config_proto_goTypes,
		DependencyIndexes: file_orchestrator_v1_configurations_encryption_config_proto_depIdxs,
		EnumInfos:         file_orchestrator_v1_configurations_encryption_config_proto_enumTypes,
		MessageInfos:      file_orchestrator_v1_configurations_encryption_config_proto_msgTypes,
	}.Build()
	File_orchestrator_v1_configurations_encryption_config_proto = out.File
	file_orchestrator_v1_configurations_encryption_config_proto_rawDesc = nil
	file_orchestrator_v1_configurations_encryption_config_proto_goTypes = nil
	file_orchestrator_v1_configurations_encryption_config_proto_depIdxs = nil
}
